// <auto-generated />
using System;
using GoldenSoftAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoldenSoftAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230205050259_Initial2")]
    partial class Initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GoldenSoftAPI.Caliber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nameCaliber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Calibers");
                });

            modelBuilder.Entity("GoldenSoftAPI.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("GoldenSoftAPI.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("caliberId")
                        .HasColumnType("int");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("numberBatch")
                        .HasColumnType("int");

                    b.Property<int>("numberBoxes")
                        .HasColumnType("int");

                    b.Property<int>("numberPallet")
                        .HasColumnType("int");

                    b.Property<int>("purchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("qualityId")
                        .HasColumnType("int");

                    b.Property<int>("typeBoxId")
                        .HasColumnType("int");

                    b.Property<int>("varietyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("caliberId");

                    b.HasIndex("clientId");

                    b.HasIndex("purchaseOrderId");

                    b.HasIndex("qualityId");

                    b.HasIndex("typeBoxId");

                    b.HasIndex("varietyId");

                    b.ToTable("inventory");
                });

            modelBuilder.Entity("GoldenSoftAPI.InventoryIssues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("dateIssue")
                        .HasColumnType("datetime2");

                    b.Property<int>("inventoryId")
                        .HasColumnType("int");

                    b.Property<int>("numberIssues")
                        .HasColumnType("int");

                    b.Property<int>("reasonIssuesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("inventoryId");

                    b.HasIndex("reasonIssuesId");

                    b.ToTable("inventoryIssues");
                });

            modelBuilder.Entity("GoldenSoftAPI.InventoryReasonIssues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Reasons")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("inventoryReasonIssues");
                });

            modelBuilder.Entity("GoldenSoftAPI.PurchaseDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("purchaseOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("purchaseOrderId");

                    b.ToTable("purchasesDetails");
                });

            modelBuilder.Entity("GoldenSoftAPI.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("dateOrder")
                        .HasColumnType("datetime2");

                    b.Property<string>("producer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("purchases");
                });

            modelBuilder.Entity("GoldenSoftAPI.Quality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nameQuality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quality");
                });

            modelBuilder.Entity("GoldenSoftAPI.TypeBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nameTypeBox")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeBox");
                });

            modelBuilder.Entity("GoldenSoftAPI.Variety", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nameVariety")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Variety");
                });

            modelBuilder.Entity("GoldenSoftAPI.Inventory", b =>
                {
                    b.HasOne("GoldenSoftAPI.Caliber", "caliber")
                        .WithMany()
                        .HasForeignKey("caliberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenSoftAPI.Client", "client")
                        .WithMany()
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenSoftAPI.PurchaseOrder", "purchaseOrder")
                        .WithMany()
                        .HasForeignKey("purchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenSoftAPI.Quality", "quality")
                        .WithMany()
                        .HasForeignKey("qualityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenSoftAPI.TypeBox", "typeBox")
                        .WithMany()
                        .HasForeignKey("typeBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenSoftAPI.Variety", "variety")
                        .WithMany()
                        .HasForeignKey("varietyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("caliber");

                    b.Navigation("client");

                    b.Navigation("purchaseOrder");

                    b.Navigation("quality");

                    b.Navigation("typeBox");

                    b.Navigation("variety");
                });

            modelBuilder.Entity("GoldenSoftAPI.InventoryIssues", b =>
                {
                    b.HasOne("GoldenSoftAPI.Inventory", "inventory")
                        .WithMany()
                        .HasForeignKey("inventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenSoftAPI.InventoryReasonIssues", "reasonIssues")
                        .WithMany()
                        .HasForeignKey("reasonIssuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("inventory");

                    b.Navigation("reasonIssues");
                });

            modelBuilder.Entity("GoldenSoftAPI.PurchaseDetails", b =>
                {
                    b.HasOne("GoldenSoftAPI.PurchaseOrder", "purchaseOrder")
                        .WithMany()
                        .HasForeignKey("purchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("purchaseOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
